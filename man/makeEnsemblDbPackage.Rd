\name{makeEnsembldbPackage}
\alias{makeEnsembldbPackage}
\alias{fetchTablesFromEnsembl}
\alias{makeEnsemblSQLiteFromTables}
\title{
  Generating a Ensembl annotation package from Ensembl
}
\description{
  These functions allow to retrieve annotations from the Ensembl
  database (\code{fetchTablesFromEnsembl}) create an SQLite database
  from these (\code{makeEnsemblSQLiteFromTables}) and to generate an
  annotation package providing access to this resource
  (\code{makeEnsembldbPackage}).
}
\usage{

fetchTablesFromEnsembl(version, ensemblapi, user="anonymous",
                       host="ensembldb.ensembl.org", pass="",
                       species="human")

makeEnsemblSQLiteFromTables(path=".", dbname)

makeEnsembldbPackage(ensdb, version, maintainer, author,
                     destDir=".", license="Artistic-2.0")

}
\arguments{
  \item{ version }{
    For \code{fetchTablesFromEnsembl}: the Ensembl version for which the
    annotation should be retrieved (e.g. 75).

    For \code{makeEnsemblDbPackage}: the version for the package.
  }
  \item{ ensemblapi }{
    The path to the Ensembl perl API installed locally on the
  system. The Ensembl perl API version has to fit the version.
  }
  \item{ user }{
    The username for the Ensembl database.
  }
  \item{ host }{
    The hostname to access the Ensembl database.
  }
  \item{ pass }{
    The password for the Ensembl database.
  }
  \item{ species }{
    The species for which the annotations should be retrieved.
  }
  \item{ path }{
    The directory in which the tables retrieved by
    \code{fetchTablesFromEnsembl} are stored.
  }

  \item{dbname}{
    The name for the database (optional). By default a name based on the
    species and Ensembl version will be automatically generated (and
    returned by the function).
  }

  \item{ ensdb }{
    The file name of the SQLite database generated by \code{makeEnsemblSQLiteFromTables}.
  }
  \item{ maintainer }{
    The maintainer of the package.
  }
  \item{ author }{
    The author of the package.
  }
  \item{ destDir }{
    Where the package should be saved to.
  }
  \item{ license }{
    The license of the package.
  }
}
\details{
  The \code{fetchTablesFromEnsembl} function internally calls the perl
  script \code{get_gene_transcript_exon_tables.pl} to retrieve all
  required information from the Ensembl database using the Ensembl perl API.
}
\note{
  A local installation of the Ensembl perl API is required for the
  \code{fetchTablesFromEnsembl}. See
  \url{http://www.ensembl.org/info/docs/api/api_installation.html} for
  installation inscructions.
}
\value{
\code{makeEnsemblSQLiteFromTables}: the name of the SQLite file.
}
\seealso{
  \code{\link{EnsDb}}, \code{\link{genes}}
}
\author{
Johannes Rainer
}
\examples{

\dontrun{

## get all human gene/transcript/exon annotations from Ensembl (75)
## the resulting tables will be stored by default to the current working
## directory; if the correct Ensembl api (version 75) is defined in the
## PERL5LIB environment variable, the ensemblapi parameter can also be omitted.
fetchTablesFromEnsembl(75,
                       ensemblapi="/home/bioinfo/ensembl/75/API/ensembl/modules",
                       species="human")

## These tables can then be processed to generate a SQLite database
## containing the annotations
DBFile <- makeEnsemblSQLiteFromTables()

## and finally we can generate the package
makeEnsembldbPackage(ensdb=DBFile, version="0.0.1",
                     maintainer="Johannes Rainer <johannes.rainer@eurac.edu>",
                     author="J Rainer")

}

## Generate a sqlite database for genes encoded on chromosome Y
chrY <- system.file( "chrY", package="ensembldb" )
DBFile <- makeEnsemblSQLiteFromTables( path=chrY ,dbname=tempfile() )
## load this database:
edb <- EnsDb( DBFile )

edb

}
\keyword{ data }

